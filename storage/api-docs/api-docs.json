{
    "openapi": "3.0.0",
    "info": {
        "title": "TFSO API",
        "description": "API for TFSO application",
        "contact": {
            "name": "Burak",
            "url": "https://burakkaynar.com",
            "email": "burak@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/access-logs": {
            "get": {
                "tags": [
                    "Access Logs"
                ],
                "summary": "Get access logs",
                "description": "Retrieve a list of access logs for authenticated user with optional filters",
                "operationId": "a753df21a67beb42c17d4bc7e621351c",
                "parameters": [
                    {
                        "name": "content_type",
                        "in": "query",
                        "description": "Filter by content type (e.g., 'track', 'radio')",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of access logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AccessLog"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Access Logs"
                ],
                "summary": "Create a new access log entry",
                "operationId": "426bda7bbbaa4bac386b256fd06e3185",
                "requestBody": {
                    "description": "Data for the new access log",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content_type",
                                    "content_id"
                                ],
                                "properties": {
                                    "content_type": {
                                        "type": "string",
                                        "example": "track"
                                    },
                                    "content_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Access log created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/access-logs/global": {
            "get": {
                "tags": [
                    "Access Logs"
                ],
                "summary": "Get all access logs",
                "description": "Retrieve all access logs regardless of user or content type",
                "operationId": "975e69a49d88096a2ecd6981ab3579a9",
                "responses": {
                    "200": {
                        "description": "A list of all access logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AccessLog"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mobile-register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Kullanıcı kaydı oluşturur",
                "operationId": "fdd48a8caa4a29ae8fe88353d5ceae01",
                "requestBody": {
                    "description": "Kullanıcı kayıt bilgileri",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Test User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Kayıt başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Doğrulama hatası"
                    }
                }
            }
        },
        "/api/mobile-login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Kullanıcı girişi yapar",
                "operationId": "ecc8e5c691fc648b604df1aca9688591",
                "requestBody": {
                    "description": "Kullanıcı giriş bilgileri",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Giriş başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Geçersiz giriş bilgileri"
                    }
                }
            }
        },
        "/api/update-fcm-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Kullanıcının FCM token'ını günceller",
                "operationId": "fc5ead239de75a06508e37322f34fd10",
                "requestBody": {
                    "description": "FCM token bilgisi",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fcm_token"
                                ],
                                "properties": {
                                    "fcm_token": {
                                        "type": "string",
                                        "example": "dA1B2c3D4e5F6g7H8i9J0k1L2m3N4o5P6q7R8s9T0u1V2w3X4y5Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "FCM token başarıyla güncellendi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "FCM token updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    },
                    "422": {
                        "description": "Doğrulama hatası"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Kullanıcı çıkışı yapar",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "Başarıyla çıkış yapıldı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Tüm kategorileri listeler",
                "operationId": "8e17a9627dbed245cf032f867569cf11",
                "responses": {
                    "200": {
                        "description": "Kategorilerin listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kategoriler getirilirken bir hata oluştu."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories-paginated": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get paginated list of categories ordered by content count",
                "operationId": "1941ae5c859af22f0125b4b8d28fe8ca",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of categories ordered by content count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/search": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Search categories by name",
                "operationId": "65c91bf7d88ed66358ebf08822a81083",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for category name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results for categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - query parameter required"
                    }
                }
            }
        },
        "/api/categories/bulk": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Toplu kategori ekleme işlemi",
                "operationId": "9942246c1bc0e16e765b2d45e0b9dcb5",
                "requestBody": {
                    "description": "Eklenmek istenen kategorilerin listesi",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categories": {
                                        "description": "Kategori objelerinin listesi",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "description": "Kategori adı",
                                                    "type": "string",
                                                    "example": "Pop Müzik"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Kategoriler başarıyla eklendi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kategoriler başarıyla eklendi."
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Doğrulama hatası",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Doğrulama hatası"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "categories.0.name": [
                                                    "The categories.0.name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kategoriler eklenirken bir hata oluştu."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}/tracks": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Bir kategoriye ait tüm şarkıları listeler",
                "operationId": "7607f5d38c720a8439fd49f8f639b8ca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Kategori ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Şarkıların listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Track"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kategori bulunamadı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kategori bulunamadı."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası"
                    }
                }
            }
        },
        "/api/categories/{id}/sets": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Bir kategoriye ait tüm setleri listeler",
                "operationId": "51bd8bd09378912d0e5e34426c563fc8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Kategori ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Setlerin listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Set"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kategori bulunamadı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kategori bulunamadı."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category with sets and/or tracks",
                "operationId": "6a038665b20191638e1608ea8897bf64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Content type filter",
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "enum": [
                                "sets",
                                "tracks",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category with filtered content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "$ref": "#/components/schemas/Category"
                                        },
                                        "content": {
                                            "description": "Array of sets and/or tracks with type identifier",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "set",
                                                            "track"
                                                        ]
                                                    },
                                                    "data": {
                                                        "description": "Set or Track object",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Yorumları listele",
                "description": "Belirtilen içerik (Set veya Track) için yorumları listeler",
                "operationId": "529f046f80a683fd05fd9b78f7f25288",
                "parameters": [
                    {
                        "name": "commentable_type",
                        "in": "query",
                        "description": "Yorum yapılan içerik tipi",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "App\\Models\\Set",
                                "App\\Models\\Track"
                            ]
                        }
                    },
                    {
                        "name": "commentable_id",
                        "in": "query",
                        "description": "Yorum yapılan içeriğin ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Sayfa numarası",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Sayfa başına gösterilecek yorum sayısı",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Comment"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "has_more": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "commentable_type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The commentable type field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Yorum ekle",
                "description": "Belirtilen içerik (Set veya Track) için yeni yorum ekler",
                "operationId": "c5026a090c828afeeb788745a32f43e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "commentable_type",
                                    "commentable_id"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Harika bir set! 🔥"
                                    },
                                    "commentable_type": {
                                        "type": "string",
                                        "enum": [
                                            "App\\Models\\Set",
                                            "App\\Models\\Track"
                                        ],
                                        "example": "App\\Models\\Set"
                                    },
                                    "commentable_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Yorum başarıyla eklendi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Comment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Yorum başarıyla eklendi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "İçerik bulunamadı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NOT_FOUND"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "İçerik bulunamadı"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "content": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The content field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/comments/{id}": {
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Yorum sil",
                "description": "Belirtilen yorumu siler. Sadece kendi yorumunu silebilir.",
                "operationId": "746d9385c0a8b30190b506df03b3fafc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Silinecek yorumun ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Yorum başarıyla silindi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Yorum başarıyla silindi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Yorum bulunamadı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NOT_FOUND"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Yorum bulunamadı"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Yetkisiz erişim",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "UNAUTHORIZED"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Bu yorumu silme yetkiniz yok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/djs": {
            "get": {
                "tags": [
                    "DJs"
                ],
                "summary": "Get all DJs",
                "operationId": "5dc880d05a9254aa104d61a57a549747",
                "responses": {
                    "200": {
                        "description": "A list of DJs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/djs-paginated": {
            "get": {
                "tags": [
                    "DJs"
                ],
                "summary": "Get paginated list of DJs ordered A-Z",
                "operationId": "9bcbbb885877e0faeab87fcdabb5038b",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of DJs ordered alphabetically",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/djs/search": {
            "get": {
                "tags": [
                    "DJs"
                ],
                "summary": "Search DJs by name",
                "operationId": "c931473d2225654126b012746c1851d6",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for DJ name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results for DJs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - query parameter required"
                    }
                }
            }
        },
        "/api/djs/{id}": {
            "get": {
                "tags": [
                    "DJs"
                ],
                "summary": "Get a specific DJ's details with recent sets and tracks",
                "operationId": "140bd7a371f935db5cd37b764c3ba486",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the DJ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the specified DJ with recent sets and tracks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "DJ Örnek"
                                        },
                                        "bio": {
                                            "type": "string",
                                            "example": "Enerjik setlerle dans pistini coşturuyorum!"
                                        },
                                        "profile_photo": {
                                            "type": "string",
                                            "example": "https://example.com/storage/users/photo.jpg"
                                        },
                                        "social_media": {
                                            "properties": {
                                                "instagram": {
                                                    "type": "string",
                                                    "example": "https://instagram.com/djornek"
                                                },
                                                "twitter": {
                                                    "type": "string",
                                                    "example": "https://twitter.com/dj_ornek"
                                                },
                                                "facebook": {
                                                    "type": "string",
                                                    "example": "https://facebook.com/djornek"
                                                },
                                                "tiktok": {
                                                    "type": "string",
                                                    "example": "https://tiktok.com/@djornek"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sets": {
                                            "description": "Last 3 sets of the DJ",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Summer Vibes Mix"
                                                    },
                                                    "cover_image": {
                                                        "type": "string",
                                                        "example": "https://example.com/storage/sets/cover.jpg"
                                                    },
                                                    "audio_file": {
                                                        "type": "string",
                                                        "example": "https://example.com/storage/sets/audio.mp3"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "tracks": {
                                            "description": "Last 3 tracks of the DJ",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Epic Beat"
                                                    },
                                                    "audio_file": {
                                                        "type": "string",
                                                        "example": "https://example.com/storage/tracks/audio.mp3"
                                                    },
                                                    "duration": {
                                                        "type": "integer",
                                                        "example": 180
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "DJ not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "DJ not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Giriş yapmış kullanıcının tüm favorilerini listeler",
                "operationId": "933a74d1899fde8e6df8d9fd0b9d318e",
                "responses": {
                    "200": {
                        "description": "Favorilerin listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tracks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Track"
                                            }
                                        },
                                        "sets": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Set"
                                            }
                                        },
                                        "radios": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Radio"
                                            }
                                        },
                                        "djs": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/tracks": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Giriş yapmış kullanıcının favori şarkılarını listeler",
                "operationId": "d9bd32426e483299af3f596b33be84b2",
                "responses": {
                    "200": {
                        "description": "Favori şarkıların listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Track"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/sets": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Giriş yapmış kullanıcının favori setlerini listeler",
                "operationId": "8c660ad7e9f1e3b83eda2165b309f124",
                "responses": {
                    "200": {
                        "description": "Favori setlerin listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Set"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/radios": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Giriş yapmış kullanıcının favori radyolarını listeler",
                "operationId": "5b2602d58755fea60c0a0b681716f007",
                "responses": {
                    "200": {
                        "description": "Favori radyoların listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Radio"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/djs": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Giriş yapmış kullanıcının favori DJ'lerini listeler",
                "operationId": "4369a2ac271b847a70a28ff7d8eafbb6",
                "responses": {
                    "200": {
                        "description": "Favori DJ'lerin listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tracks/{track}/toggle-favorite": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Bir şarkıyı favorilere ekler veya çıkarır",
                "operationId": "3dea4709cbc0348799b0fce8bc2445c8",
                "parameters": [
                    {
                        "name": "track",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favori durumu güncellendi"
                    },
                    "401": {
                        "description": "Yetkisiz"
                    },
                    "404": {
                        "description": "Şarkı bulunamadı"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sets/{set}/toggle-favorite": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Bir seti favorilere ekler veya çıkarır",
                "operationId": "5feae6898b8ef58614fafa67c6194cff",
                "parameters": [
                    {
                        "name": "set",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favori durumu güncellendi"
                    },
                    "401": {
                        "description": "Yetkisiz"
                    },
                    "404": {
                        "description": "Set bulunamadı"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/radios/{radio}/toggle-favorite": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Bir radyoyu favorilere ekler veya çıkarır",
                "operationId": "ec6383dae6b792fec06af5fcfbbebaf5",
                "parameters": [
                    {
                        "name": "radio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favori durumu güncellendi"
                    },
                    "401": {
                        "description": "Yetkisiz"
                    },
                    "404": {
                        "description": "Radyo bulunamadı"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/djs/{dj}/toggle-favorite": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Bir DJ'i favorilere ekler veya çıkarır",
                "operationId": "a44bc7ac773bd8d4d043699990a1e2f3",
                "parameters": [
                    {
                        "name": "dj",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favori durumu güncellendi"
                    },
                    "401": {
                        "description": "Yetkisiz"
                    },
                    "404": {
                        "description": "DJ bulunamadı"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/places": {
            "get": {
                "tags": [
                    "Place Manager"
                ],
                "summary": "Get all places",
                "description": "Returns a list of all places with their images and user information",
                "operationId": "getPlaces",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Sample Place"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "A beautiful place"
                                                    },
                                                    "google_maps_url": {
                                                        "type": "string",
                                                        "example": "https://maps.google.com/..."
                                                    },
                                                    "apple_maps_url": {
                                                        "type": "string",
                                                        "example": "https://maps.apple.com/..."
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "Istanbul, Turkey"
                                                    },
                                                    "is_premium": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "premium_expires_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "premium_trial_used": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+90 555 123 4567"
                                                    },
                                                    "facebook_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "twitter_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "instagram_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "youtube_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "user": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/places/{id}": {
            "get": {
                "tags": [
                    "Place Manager"
                ],
                "summary": "Get place by ID",
                "description": "Returns a specific place with its images and user information",
                "operationId": "getPlace",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Place ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Sample Place"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A beautiful place"
                                                },
                                                "google_maps_url": {
                                                    "type": "string",
                                                    "example": "https://maps.google.com/..."
                                                },
                                                "apple_maps_url": {
                                                    "type": "string",
                                                    "example": "https://maps.apple.com/..."
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Istanbul, Turkey"
                                                },
                                                "is_premium": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "premium_expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "premium_trial_used": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+90 555 123 4567"
                                                },
                                                "facebook_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "twitter_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "instagram_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "youtube_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Place not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Place not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/places/last": {
            "get": {
                "tags": [
                    "Place Manager"
                ],
                "summary": "Get the latest places",
                "description": "Returns the 5 most recently created places with their images and events",
                "operationId": "getLastPlace",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Sample Place"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A beautiful place"
                                                },
                                                "google_maps_url": {
                                                    "type": "string",
                                                    "example": "https://maps.google.com/..."
                                                },
                                                "apple_maps_url": {
                                                    "type": "string",
                                                    "example": "https://maps.apple.com/..."
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Istanbul, Turkey"
                                                },
                                                "is_premium": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "premium_expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "premium_trial_used": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+90 555 123 4567"
                                                },
                                                "facebook_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "twitter_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "instagram_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "youtube_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No places found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No places found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/places-paginated": {
            "get": {
                "tags": [
                    "Place Manager"
                ],
                "summary": "Get paginated places",
                "description": "Returns paginated places with their images and events for infinite scroll",
                "operationId": "getPlacesPaginated",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "has_more_pages": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/places/search": {
            "get": {
                "tags": [
                    "Place Manager"
                ],
                "summary": "Search places by name and location",
                "description": "Search places by name or location with optional pagination",
                "operationId": "searchPlaces",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for name or location",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "has_more_pages": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "query": {
                                            "type": "string",
                                            "example": "Istanbul"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Query parameter required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Search query is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sets": {
            "get": {
                "tags": [
                    "Sets"
                ],
                "summary": "Get all sets",
                "operationId": "34d6158535a7aed5c90a0c22bef7ae5d",
                "responses": {
                    "200": {
                        "description": "A list of sets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Set"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sets-latest": {
            "get": {
                "tags": [
                    "Sets"
                ],
                "summary": "Get sets ordered by creation date (latest first)",
                "operationId": "65ad5f5fbd519792f4159212d32a028e",
                "responses": {
                    "200": {
                        "description": "A list of sets ordered by created_at desc",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Set"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sets/search": {
            "get": {
                "tags": [
                    "Sets"
                ],
                "summary": "Search sets by name",
                "operationId": "ed8b62e764351b8e54d098bbc8e2c8f0",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for set name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results for sets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Set"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - query parameter required"
                    }
                }
            }
        },
        "/api/tracks": {
            "get": {
                "tags": [
                    "Tracks"
                ],
                "summary": "Tüm şarkıları listeler",
                "operationId": "a73400d1e2ec7667296ffa66ff67761d",
                "responses": {
                    "200": {
                        "description": "Şarkıların listesi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Track"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracks"
                ],
                "summary": "Yeni bir şarkı oluşturur",
                "operationId": "3b575ef9cd32174c62b9ce92c31a6c37",
                "requestBody": {
                    "description": "Şarkı bilgileri",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "audio_file",
                                    "category_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Harika Şarkı"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Bu şarkı çok güzel."
                                    },
                                    "audio_file": {
                                        "description": "Ses dosyası (mp3, wav vb.)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image_file": {
                                        "description": "Kapak resmi (jpg, png vb.)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "is_premium": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "iap_product_id": {
                                        "type": "string",
                                        "example": "premium_track_01"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Şarkı başarıyla oluşturuldu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Track"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Doğrulama hatası"
                    },
                    "401": {
                        "description": "Yetkisiz"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tracks/{id}": {
            "get": {
                "tags": [
                    "Tracks"
                ],
                "summary": "Belirli bir şarkının detaylarını getirir",
                "operationId": "5b68bb9f6d22bdc9d39e8e8437cac3af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Şarkı ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Şarkı detayları",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Track"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Şarkı bulunamadı"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracks"
                ],
                "summary": "Bir şarkıyı günceller",
                "operationId": "4be5b91751eca9a515a6bd8430a57a0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Güncellenecek şarkının ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Güncellenecek şarkı bilgileri",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "audio_file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image_file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "is_premium": {
                                        "type": "boolean"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "_method": {
                                        "description": "Form-data ile PUT isteği göndermek için gereklidir.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Şarkı başarıyla güncellendi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Track"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Şarkı bulunamadı"
                    },
                    "422": {
                        "description": "Doğrulama hatası"
                    },
                    "403": {
                        "description": "Yetkisiz işlem"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tracks"
                ],
                "summary": "Bir şarkıyı siler",
                "operationId": "613a044835d3eef38f4e536aafa377aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Silinecek şarkının ID'si",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Şarkı başarıyla silindi"
                    },
                    "404": {
                        "description": "Şarkı bulunamadı"
                    },
                    "403": {
                        "description": "Yetkisiz işlem"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tracks/new-releases": {
            "get": {
                "tags": [
                    "Tracks"
                ],
                "summary": "🔥 Yeni çıkan parçaları getirir (Son 30 gün)",
                "description": "En son eklenen parçaları created_at tarihine göre sıralar. Son 30 günde eklenen parçaları önceliklendirir.",
                "operationId": "00baa114edef79ea0e8b68ba42e28b57",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Kaç parça getirileceği (varsayılan: 20, maksimum: 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 50,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Kaç gün öncesine kadar bakılacağı (varsayılan: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "maximum": 365,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "🎵 Yeni çıkan parçalar başarıyla getirildi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "🔥 Yeni çıkan parçalar getirildi!"
                                        },
                                        "total_count": {
                                            "type": "integer",
                                            "example": 25
                                        },
                                        "period": {
                                            "type": "string",
                                            "example": "Son 30 gün"
                                        },
                                        "tracks": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Epic Beat 2024"
                                                    },
                                                    "artist_name": {
                                                        "type": "string",
                                                        "example": "DJ Awesome"
                                                    },
                                                    "category_name": {
                                                        "type": "string",
                                                        "example": "Electronic"
                                                    },
                                                    "audio_file": {
                                                        "type": "string",
                                                        "example": "https://api.example.com/storage/tracks/epic-beat.mp3"
                                                    },
                                                    "image_file": {
                                                        "type": "string",
                                                        "example": "https://api.example.com/storage/tracks/epic-beat-cover.jpg"
                                                    },
                                                    "release_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-06-28T15:30:00Z"
                                                    },
                                                    "days_since_release": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası"
                    }
                }
            }
        },
        "/api/tracks/search": {
            "get": {
                "tags": [
                    "Tracks"
                ],
                "summary": "Search tracks by title",
                "operationId": "6f0694753f62b3894a919e18168989ff",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for track title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results for tracks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Track"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - query parameter required"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "Model representing a user in the system",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the user",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "Password for the user account",
                        "type": "string",
                        "format": "password"
                    },
                    "profile_photo": {
                        "description": "URL of the user's profile photo",
                        "type": "string"
                    },
                    "bio": {
                        "description": "Short biography of the user",
                        "type": "string"
                    },
                    "instagram": {
                        "description": "Instagram handle of the user",
                        "type": "string"
                    },
                    "twitter": {
                        "description": "Twitter handle of the user",
                        "type": "string"
                    },
                    "facebook": {
                        "description": "Facebook profile URL of the user",
                        "type": "string"
                    },
                    "tiktok": {
                        "description": "TikTok handle of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pop"
                    },
                    "image": {
                        "type": "string",
                        "example": "categories/pop.jpg",
                        "nullable": true
                    },
                    "image_url": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "http://localhost/storage/categories/pop.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "AccessLog": {
                "title": "AccessLog",
                "description": "Erişim kayıtları modeli",
                "properties": {
                    "id": {
                        "description": "Erişim kaydının benzersiz ID'si",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "user_id": {
                        "description": "Erişimi yapan kullanıcının ID'si",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ip_address": {
                        "description": "Erişimi yapan kullanıcının IP adresi",
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "content_type": {
                        "description": "Erişilen içeriğin türü (örn: 'Post', 'Comment')",
                        "type": "string",
                        "maxLength": 255
                    },
                    "content_id": {
                        "description": "Erişilen içeriğin ID'si",
                        "type": "integer",
                        "format": "int64"
                    },
                    "accessed_at": {
                        "description": "Erişimin gerçekleştiği zaman damgası (ISO 8601 formatında)",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-27T10:00:00Z"
                    },
                    "created_at": {
                        "description": "Kaydın oluşturulma zamanı",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Kaydın son güncellenme zamanı",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "description": "Yorum modeli",
                "properties": {
                    "id": {
                        "description": "Yorum ID'si",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "user_id": {
                        "description": "Yorum yapan kullanıcının ID'si",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "content": {
                        "description": "Yorum içeriği",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Harika bir set! 🔥"
                    },
                    "commentable_type": {
                        "description": "Yorum yapılan içerik tipi",
                        "type": "string",
                        "example": "App\\\\Models\\\\Set"
                    },
                    "commentable_id": {
                        "description": "Yorum yapılan içeriğin ID'si",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "description": "Yorum oluşturulma tarihi",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-08-10T12:00:00.000000Z"
                    },
                    "user": {
                        "description": "Yorum yapan kullanıcı bilgileri",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Admin Burak"
                            },
                            "profile_photo": {
                                "type": "string",
                                "example": "https://example.com/storage/users/profiles/user1.jpg",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Radio": {
                "title": "Radio",
                "description": "Radio station model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "name": {
                        "type": "string"
                    },
                    "stream_url": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "logo_url": {
                        "type": "string",
                        "readOnly": "true",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Set": {
                "title": "Set",
                "description": "Model representing a set of tracks",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the set",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "user_id": {
                        "description": "ID of the user who created the set",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the set",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the set",
                        "type": "string"
                    },
                    "cover_image": {
                        "description": "URL of the cover image",
                        "type": "string"
                    },
                    "audio_file": {
                        "description": "Path to the audio file",
                        "type": "string"
                    },
                    "is_premium": {
                        "description": "Indicates if the set is premium",
                        "type": "boolean"
                    },
                    "iap_product_id": {
                        "description": "In-app purchase product ID for premium access",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp of the set",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Last update timestamp of the set",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Track": {
                "title": "Track",
                "description": "Track model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "audio_file": {
                        "type": "string"
                    },
                    "image_file": {
                        "type": "string"
                    },
                    "is_premium": {
                        "type": "boolean"
                    },
                    "iap_product_id": {
                        "type": "string"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "audio_url": {
                        "type": "string",
                        "readOnly": "true"
                    },
                    "image_url": {
                        "type": "string",
                        "readOnly": "true"
                    },
                    "audio_file_name": {
                        "type": "string",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Access Logs",
            "description": "API Endpoints for managing access logs"
        },
        {
            "name": "Comments",
            "description": "Yorum yönetimi API endpoints"
        },
        {
            "name": "Place Manager",
            "description": "API Endpoints for managing places"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "DJs",
            "description": "DJs"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "Sets",
            "description": "Sets"
        },
        {
            "name": "Tracks",
            "description": "Tracks"
        }
    ]
}